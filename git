#!/bin/bash

function git-branchit {
    git rev-parse HEAD > /dev/null 2>&1 &&
    git branch --all |
    grep -v HEAD |
    fzf |
    sed 's/.* //'
    #git branch --color=always --sort=-committerdate
    #fzf --height 50% --ansi --no-multi --preview-window right:65%
    #--preview 'git log -n 50 --color=always --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})'
}

function git-checkit {
    git rev-parse HEAD > /dev/null 2>&1 &&
    echo 'ðŸ”€ Pick the branch:' &&
    branch=$(git-branchit) &&
    [ -n "$branch" ] &&
    (
        [ "$branch" = "${branch#remotes/}" ] &&
        git checkout "$branch" ||
        git checkout --track "$branch"
    )
}

function git-forgetit {
    git rev-parse HEAD > /dev/null 2>&1 &&
    echo 'ðŸ”€ Pick the branch:' &&
    branch=$(git-branchit) &&
    [ -n "$branch" ] &&
    git branch -d "$branch"
}

function git-state {
    echo 'ðŸ“œ Status: \n' &&
    git status &&
    echo '\nðŸ“‹ Last commit:\n' &&
    git last &&
    echo '\nâŒ› Recent history:\n' &&
    git hist
}

function git-branches {
    git for-each-ref --sort=-committerdate refs/heads --color=always \
    --format='%(refname:short)|%(color:green)%(subject)|%(authorname)|%(committerdate:relative)$(color:reset)' |
    column -t -s'|'
}
